package edu.ithaca.dragon.par.io;

import edu.ithaca.dragon.par.domainModel.Question;
import edu.ithaca.dragon.par.domainModel.QuestionPool;
import edu.ithaca.dragon.par.domainModel.equineUltrasound.EquineQuestionTypes;
import edu.ithaca.dragon.par.pedagogicalModel.LevelTaskGenerator;
import edu.ithaca.dragon.par.pedagogicalModel.TaskGenerator;
import edu.ithaca.dragon.par.studentModel.StudentModel;
import edu.ithaca.dragon.util.JsonUtil;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;

import static junit.framework.TestCase.assertEquals;
import static junit.framework.TestCase.assertTrue;

public class ImageTaskTest {

    @Test
    public void toJsonAndBackTest() throws IOException {
        QuestionPool myQP = new QuestionPool(new JsonQuestionPoolDatastore("src/test/resources/author/SampleQuestionPool.json").getAllQuestions());
        List<Question> myQPList = myQP.getAllQuestions();
        ImageTask testImageTask = new ImageTask("../static/images/equine02.jpg\"", myQPList);

        //write to JSON
        JsonUtil.toJsonFile("src/test/resources/autoGenerated/ImageTaskTest-toJsonAndBackTest.json", testImageTask);
        //read from JSON
        ImageTask testImageTaskIn = JsonUtil.fromJsonFile("src/test/resources/autoGenerated/ImageTaskTest-toJsonAndBackTest.json",ImageTask.class);
        //compare
        assertTrue(testImageTask.equals(testImageTaskIn));

        Path path = Paths.get("src/test/resources/autoGenerated/ImageTaskTest-toJsonAndBackTest.json");
        Assertions.assertTrue(Files.deleteIfExists(path));

    }

    @Test
    public void setMessageTest() throws IOException{
        //set up
        TaskGenerator taskGenerator = new LevelTaskGenerator(EquineQuestionTypes.makeLevelToTypesMap());
        QuestionPool myQP = new QuestionPool(new JsonQuestionPoolDatastore("src/test/resources/author/TestQP.json").getAllQuestions());
        StudentModelRecord smr = JsonUtil.fromJsonFile("src/test/resources/author/students/buckmank.json", StudentModelRecord.class);
        StudentModel masteredStudentModel = smr.buildStudentModel(myQP);
        ImageTask it = taskGenerator.makeTask(masteredStudentModel, 4);

        //first set
        it.setMessage("hello!!!");
        assertEquals("hello!!!", it.getMessage());

        //second set
        it.setMessage("hi");
        assertEquals("hi", it.getMessage());
        assertTrue(!it.getMessage().equals("hello!!!"));

        //new it
        ImageTask it2 = taskGenerator.makeTask(masteredStudentModel, 4);
        it2.setMessage("bye");
        //does not equal other image tasks's message
        assertEquals("hi", it.getMessage());
        assertTrue(!it.getMessage().equals("bye"));
        assertEquals("bye", it2.getMessage());
        assertTrue(!it2.getMessage().equals("hi"));
    }
}
