package edu.ithaca.dragon.par.domainModel;

import edu.ithaca.dragon.util.JsonUtil;
import org.junit.jupiter.api.Test;

import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

public class QuestionWithFollowupTest {
    @Test
    public void toAndFromJsonTest() throws IOException {
        //Set up a list of Questions
        //StructureQ1 has 3 followup questions
        //one of those questions has a follow up
        //PlaneQ1 does not have any follow up questions
        Question bonusQuestion = new Question("BonusQ1", "This is a followup to a followup question!", "Plane", "Nice!", Arrays.asList("Nice!", "Sweet!", "Cool!"), "../static/images/equine02.jpg");
        Question attach1 = new Question("AttachQ1", "Which attachment is this?", "Attachment",
                "Type1", Arrays.asList("Type1", "Type2", "Type3"), "../static/images/equine02.jpg");
        Question attach2 = new Question("AttachQ2", "Which attachment is this?", "Attachment",
                "Type3", Arrays.asList("Type1", "Type2", "Type3"), "../static/images/equine02.jpg");
        QuestionWithFollowup attach3 = new QuestionWithFollowup("AttachQ1", "Which attachment is this?", "Attachment",
                "Type2", Arrays.asList("Type1", "Type2", "Type3"), "../static/images/equine02.jpg", Arrays.asList(bonusQuestion));
        List<Question> attachmentQuestions = Arrays.asList(attach1, attach2, attach3);
        QuestionWithFollowup myQ = new QuestionWithFollowup("StructureQ1", "What kind of structure is this?", "Structure", "Structure1", Arrays.asList("Structure1", "Structure2", "Structure3"), "../static/images/equine02.jpg", attachmentQuestions);
        Question myQ2 = new Question("PlaneQ1", "What plane is this?", "Plane", "Transverse", Arrays.asList("Transverse", "Longitudinal"), "../static/images/equine02.jpg");
        List<Question> hardcodedQuestions = Arrays.asList(myQ, myQ2);

        //Write to file
        JsonUtil.toJsonFile("src/test/resources/autoGenerated/questionsWithFollowup.json", hardcodedQuestions);

        //Load back in
        List<Question> questionsFromFile = JsonUtil.listFromJsonFile("src/test/resources/autoGenerated/questionsWithFollowup.json", QuestionWithFollowup.class);
        assertEquals(5, questionsFromFile.size());
    }

    @Test
    public void getFollowUpQuestionsTest(){

    }
}
