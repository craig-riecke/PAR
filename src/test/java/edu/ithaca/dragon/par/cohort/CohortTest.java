package edu.ithaca.dragon.par.cohort;

import com.fasterxml.jackson.core.JsonProcessingException;
import edu.ithaca.dragon.par.io.ImageTaskResponseOOP;
import edu.ithaca.dragon.par.pedagogicalmodel2.QuestionChooser;
import edu.ithaca.dragon.par.pedagogicalmodel2.QuestionChooserInOrder;
import edu.ithaca.dragon.par.pedagogicalmodel2.QuestionChooserRandom;
import edu.ithaca.dragon.util.JsonIoHelperDefault;
import edu.ithaca.dragon.util.JsonIoUtil;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.io.TempDir;

import java.io.IOException;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

public class CohortTest {

    @Test
    public void toAndFromJsonTest(@TempDir Path tempDir) throws IOException{
        List<Cohort> cohorts = CohortTest.createExampleCohorts();
        Path tempFile = tempDir.resolve("ExampleCohorts.json");
        new JsonIoUtil(new JsonIoHelperDefault()).toFile(tempFile.toString(), cohorts);

        List<Cohort> responseIn = new JsonIoUtil(new JsonIoHelperDefault()).listFromFile(tempFile.toString(), Cohort.class);

        assertEquals(2, responseIn.size());

        assertEquals(3, cohorts.get(0).studentIds.size());
        assertTrue(cohorts.get(0).studentIds.contains("r2"));
        assertTrue(cohorts.get(0).questionChooser instanceof QuestionChooserRandom);

        assertEquals(4, cohorts.get(1).studentIds.size());
        assertTrue(cohorts.get(1).studentIds.contains("o2"));
        assertTrue(cohorts.get(1).questionChooser instanceof QuestionChooserInOrder);
        assertEquals(5, ((QuestionChooserInOrder)cohorts.get(1).questionChooser).questionIdsInOrder.size());
    }

    public static List<Cohort> createExampleCohorts(){
        List<Cohort> examples = new ArrayList<>();
        examples.add(new Cohort(
                "random",
                "HorseUltrasound",
                Set.of("r1", "r2", "r3"),
                new QuestionChooserRandom()
        ));
        examples.add(new Cohort(
                "random",
                "HorseUltrasound",
                Set.of("o1", "o2", "o3", "o4"),
                new QuestionChooserInOrder(List.of(
                        "858-structure1-./images/2ATransverse.jpg",
                        "850-structure3-./images/Annotated2Long.jpg",
                        "866-plane-./images/3BTransverse.jpg",
                        "847-structure2-./images/Annotated2Long.jpg",
                        "614-plane-./images/3CTransverse.jpg"
                ))
        ));
        return examples;
    }

    public static void main(String[] args) throws IOException {
        List<Cohort> example = createExampleCohorts();
        new JsonIoUtil(new JsonIoHelperDefault()).toFile("src/test/resources/autoGenerated/cohortListExample.json", example);
    }

}
